{"version":3,"sources":["app.js"],"names":["getApiUrl","fetch","response","json","data","getPlanets","planets","source","document","querySelector","innerHTML","template","Handlebars","compile","target","querySelectorAll","forEach","link","addEventListener","e","temp","length","classList","remove","dataset","id","add","el","nav"],"mappings":";;;;;;SACeA,S;;;;;uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBC,KAAK,kFAD9B;;AAAA;AACQC,YAAAA,QADR;AAAA;AAAA,mBAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQC,YAAAA,IAFR;AAAA,6CAGWA,IAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAMeC,U;;;;;wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBL,SAAS,EADjC;;AAAA;AACQM,YAAAA,OADR;AAEUC,YAAAA,MAFV,GAEmBC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,SAF1D;AAGUC,YAAAA,QAHV,GAGqBC,UAAU,CAACC,OAAX,CAAmBN,MAAnB,CAHrB;AAIUO,YAAAA,MAJV,GAImBN,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJnB;AAKIK,YAAAA,MAAM,CAACJ,SAAP,IAAoBC,QAAQ,CAACL,OAAD,CAA5B;AAEAE,YAAAA,QAAQ,CAACO,gBAAT,CAA0B,gBAA1B,EAA4CC,OAA5C,CAAoD,UAAAC,IAAI,EAAI;AACxDA,cAAAA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,CAAC,EAAG;AAC/B,oBAAMC,IAAI,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAb;;AACA,oBAAID,QAAQ,CAACO,gBAAT,CAA0B,SAA1B,EAAqCM,MAArC,GAA8C,CAAlD,EAAqD;AACjDb,kBAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCa,SAAlC,CAA4CC,MAA5C,CAAmD,QAAnD;AACH,iBAFD,MAEO,IAAIH,IAAJ,EAAU;AACbA,kBAAAA,IAAI,CAACG,MAAL;AACH;;AACDf,gBAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAMQ,IAAI,CAACO,OAAL,CAAaC,EAA1C,EAA8CH,SAA9C,CAAwDI,GAAxD,CAA4D,QAA5D;AACH,eARD;AASH,aAVD;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBArB,UAAU;AAGVG,QAAQ,CAACO,gBAAT,CAA0B,IAA1B,EAAgCC,OAAhC,CAAyC,UAAAW,EAAE,EAAI;AAC3C,MAAIC,GAAG,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAV;AACAkB,EAAAA,EAAE,CAACT,gBAAH,CAAoB,OAApB,EAA6B,UAAAC,CAAC,EAAI;AAC9BS,IAAAA,GAAG,CAACnB,aAAJ,CAAkB,aAAlB,EAAiCa,SAAjC,CAA2CC,MAA3C,CAAkD,YAAlD;AACAI,IAAAA,EAAE,CAACL,SAAH,CAAaI,GAAb,CAAiB,YAAjB;AACH,GAHD;AAIH,CAND","sourcesContent":["\nasync function getApiUrl() {\n    let response = await fetch(`https://api.le-systeme-solaire.net/rest/bodies/?filter%5B%5D=isPlanet,neq,true`)\n    let data = await response.json()\n    return data\n}\n\nasync function getPlanets() {\n    let planets = await getApiUrl()\n    const source = document.querySelector('#planetsInfo').innerHTML\n    const template = Handlebars.compile(source)\n    const target = document.querySelector('#info')\n    target.innerHTML += template(planets)\n\n    document.querySelectorAll('.navbar-nav li').forEach(link => {\n        link.addEventListener('click', e =>{\n            const temp = document.querySelector('#planet-container')\n            if (document.querySelectorAll('.active').length > 0) {\n                document.querySelector('.active').classList.remove('active')\n            } else if (temp) {\n                temp.remove()\n            }\n            document.querySelector('#' + link.dataset.id).classList.add('active')\n        })\n    })\n}\ngetPlanets()\n\n\ndocument.querySelectorAll('li').forEach( el => {\n    let nav = document.querySelector('.navbar-nav')\n    el.addEventListener('click', e => {\n        nav.querySelector('.nav-border').classList.remove('nav-border')\n        el.classList.add('nav-border')\n    })\n})\n\n"],"file":"app.js"}